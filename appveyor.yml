# appveyor file
# http://www.appveyor.com/docs/appveyor-yml

platform:
  - x64

clone_folder: c:\projects\opencv4nodejs

init:
  - git config --global core.autocrlf true

# cache:
 # - c:\tools\opencv

# what combinations to test
environment:
  PYTHON_VERSION: 2.7
  PYTHON: "C:\\Python27-x64"

  matrix:
    - nodejs_version: 14
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - nodejs_version: 13
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - nodejs_version: 12
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - nodejs_version: 11
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - nodejs_version: 10
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - nodejs_version: 8
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

install:
  # - cmd: choco install OpenCV -y -version %OPENCV_VERSION%
  - if not "%BUILD_TASK%" == "ENVS" SET OPENCV_INCLUDE_DIR=c:\tools\opencv\build\include
  - if not "%BUILD_TASK%" == "ENVS" SET OPENCV_LIB_DIR=c:\tools\opencv\build\x64\vc14\lib
  - if not "%BUILD_TASK%" == "ENVS" SET OPENCV_BIN_DIR=c:\tools\opencv\build\x64\vc14\bin
  - if not "%BUILD_TASK%" == "ENVS" SET PATH=%PATH%;%OPENCV_BIN_DIR%;
  - ps: Install-Product node $env:nodejs_version x64
  - node --version

build: off

test_script:
  - node --version
  - if "%BUILD_TASK%" == "ENVS" (
      cd c:\projects\opencv4nodejs\ci\envs &&
      npm install &&
      npm test
    ) else (
      cd c:\projects\opencv4nodejs &&
      npm install &&
      cd c:\projects\opencv4nodejs\test &&
      npm install &&
      npm run test-appveyor &&
      npm run test-externalMemTracking
    )

on_success:
  - cmd: cd c:\projects\opencv4nodejs
  - IF defined APPVEYOR_REPO_TAG_NAME (
    npm run prebuild -- --include-regex "\.(node|a|so|dylib|lib|dll).*$" -u %GITHUB_TOKEN%
    )
